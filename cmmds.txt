# Construir container de postgres 'some-postrges'
# Descontinuado, Usar compose.
$ docker run --name some-postgres -e POSTGRES_PASSWORD=mysecretpassword -d postgres
docker run --name some-postgres -p 5432:5432 -e POSTGRES_PASSWORD=mysecretpassword -d postgres


# Construir container flask con Dockerfile
# descontinuado, usar compose
docker build -t flask_app .    
docker run -p 5000:5000 flask_app

# Construir y ejecutar compose (primera/resto de veces)
docker-compose up --build
docker-compose up
docker-compose down

# Entrar al bash/postrges psql del container DB:
docker-compose exec db psql -U postgres
docker-compose exec db psql -U postgres -d postgres

# postgres
\dt -> tablas
\d 'nombre_tabla' -> equivalente a .schema en sqlite3
\q -> quit
SELECT * FROM users;


# TESTING

build compose: docker compose up --build
start testing containers: docker-compose --profile testing up --build 

* buscar forma de no necesitar selenium en containers que se ejecutan por defecto, La idea es agregarlo a perfil de testing.
    Por ahora hacer esto resulta en fallo de pruebas